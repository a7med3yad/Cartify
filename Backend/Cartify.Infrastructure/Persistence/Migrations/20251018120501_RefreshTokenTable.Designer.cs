// <auto-generated />
using System;
using Cartify.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cartify.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018120501_RefreshTokenTable")]
    partial class RefreshTokenTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cartify.Domain.Models.LkpAttribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_lkpAttributes_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_lkpAttributes_IsDeleted_1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("AttributeId");

                    b.ToTable("lkpAttributes", (string)null);
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpAttributesProduct", b =>
                {
                    b.Property<int>("AttributeProductId")
                        .HasColumnType("int");

                    b.Property<int>("AttriputeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpAttributesProducts_IsDeleted");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("AttributeProductId");

                    b.HasIndex("AttriputeId");

                    b.HasIndex("ProductId");

                    b.ToTable("LkpAttributesProducts");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpOrderStatue", b =>
                {
                    b.Property<int>("OrderStatuesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatuesId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpOrderStatues_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpOrderStatues_IsDeleted_1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderStatuesId");

                    b.ToTable("LkpOrderStatues");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpPaymentType", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpPaymentTypes_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpPaymentTypes_IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PaymentId")
                        .HasName("PK_TblPayment");

                    b.ToTable("LkpPaymentTypes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpShipementMethod", b =>
                {
                    b.Property<int>("ShipementMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpShipementMethods_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("Fees")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpShipementMethods_IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ShipementMethodId");

                    b.ToTable("LkpShipementMethods");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpUnitMeasuresAttribute", b =>
                {
                    b.Property<int>("UnitMeasureAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpUnitOfMeasuresAttributes_IsDeleted1");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.HasKey("UnitMeasureAttributeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("LkpUnitMeasuresAttributes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpUnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpUnitOfMeasures_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_LkpUnitOfMeasures_IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UnitOfMeasureId");

                    b.ToTable("LkpUnitOfMeasures");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblAdresses_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblAdresses_IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblAdresses_IsDeleted_1");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AddressId")
                        .HasName("PK_TblAdresses_1");

                    b.HasIndex("UserId");

                    b.ToTable("TblAddresses");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblCategories_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblCategories_IsDeleted_1");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("TblCategories");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblInventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblInventory_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblInventory_IsDeleted_1");

                    b.Property<int>("ProductDetailId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<int>("QuantityReserved")
                        .HasColumnType("int");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("TblInventory", (string)null);
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrder", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblOrders_CreatedDate");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("GrantTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblOrders_IsDeleted_1");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblOrders_OrderDate");

                    b.Property<int>("OrderStatuesId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<decimal?>("TotalDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderStatuesId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ShipmentMethodId");

                    b.ToTable("TblOrders");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblOrderDetails_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblOrderDetails_IsDeleted_1");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("TblOrderDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblProducts_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblProducts_IsDeleted_1");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserStoreId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserStoreId");

                    b.ToTable("TblProducts");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductDetail", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .HasColumnType("int");

                    b.Property<int>("AttributeProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UnitMeasureAttributeId")
                        .HasColumnType("int");

                    b.HasKey("ProductDetailId");

                    b.HasIndex("AttributeProductId");

                    b.HasIndex("UnitMeasureAttributeId");

                    b.ToTable("TblProductDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("TblProductImages");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductsDetail", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int>("UnitMeasureAttributeId")
                        .HasColumnType("int");

                    b.HasKey("ProductDetailId");

                    b.HasIndex("UnitMeasureAttributeId");

                    b.ToTable("TblProductsDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblRefund", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblRefunds_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblRefunds_IsDeleted_1");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RefundId")
                        .HasColumnType("int");

                    b.Property<string>("RefundStatues")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("TblRefunds");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblReviews_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblReviews_IsDeleted_1");

                    b.Property<int>("OrderDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("OrderDetailsId");

                    b.ToTable("TblReviews");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblType", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblTypes_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblTypes_IsDeleted_1");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("TypeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblTypes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblUsers_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblUsers_IsDeleted_1");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUserStore", b =>
                {
                    b.Property<int>("UserStorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserStorId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblUserStore_CreatedDate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:DefaultConstraintName", "DF_TblUserStore_IsDeleted");

                    b.Property<string>("StoreName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserStorId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TblUserStore", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8e75dee3-74df-43c8-8ded-ca9179be3480",
                            ConcurrencyStamp = "8e75dee3-74df-43c8-8ded-ca9179be3480",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "fdcd17c2-f208-45cc-98d1-e80720cf7896",
                            ConcurrencyStamp = "fdcd17c2-f208-45cc-98d1-e80720cf7896",
                            Name = "Merchant",
                            NormalizedName = "MERCHANT"
                        },
                        new
                        {
                            Id = "c9ec0699-f839-4e8d-9bd3-12685ac984ab",
                            ConcurrencyStamp = "c9ec0699-f839-4e8d-9bd3-12685ac984ab",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpAttributesProduct", b =>
                {
                    b.HasOne("Cartify.Domain.Models.LkpAttribute", "Attripute")
                        .WithMany("LkpAttributesProducts")
                        .HasForeignKey("AttriputeId")
                        .IsRequired()
                        .HasConstraintName("FK_LkpAttributesProducts_lkpAttributes");

                    b.HasOne("Cartify.Domain.Models.TblProduct", "Product")
                        .WithMany("LkpAttributesProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_LkpAttributesProducts_TblProducts");

                    b.Navigation("Attripute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpUnitMeasuresAttribute", b =>
                {
                    b.HasOne("Cartify.Domain.Models.LkpAttribute", "Attribute")
                        .WithMany("LkpUnitMeasuresAttributes")
                        .HasForeignKey("AttributeId")
                        .IsRequired()
                        .HasConstraintName("FK_LkpUnitOfMeasuresAttributes_lkpAttributes");

                    b.HasOne("Cartify.Domain.Models.LkpUnitOfMeasure", "UnitOfMeasure")
                        .WithMany("LkpUnitMeasuresAttributes")
                        .HasForeignKey("UnitOfMeasureId")
                        .IsRequired()
                        .HasConstraintName("FK_LkpUnitOfMeasuresAttributes_LkpUnitOfMeasures");

                    b.Navigation("Attribute");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblAddress", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblUser", "User")
                        .WithMany("TblAddresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_TblAdresses_TblUsers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblInventory", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblProductDetail", "ProductDetail")
                        .WithMany("TblInventories")
                        .HasForeignKey("ProductDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_TblInventory_TblProductDetails");

                    b.HasOne("Cartify.Domain.Models.TblProductsDetail", "ProductDetailNavigation")
                        .WithMany("TblInventories")
                        .HasForeignKey("ProductDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_TblInventory_TblProductsDetails");

                    b.Navigation("ProductDetail");

                    b.Navigation("ProductDetailNavigation");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrder", b =>
                {
                    b.HasOne("Cartify.Domain.Models.LkpOrderStatue", "OrderStatues")
                        .WithMany("TblOrders")
                        .HasForeignKey("OrderStatuesId")
                        .IsRequired()
                        .HasConstraintName("FK_TblOrders_LkpOrderStatues");

                    b.HasOne("Cartify.Domain.Models.LkpPaymentType", "PaymentType")
                        .WithMany("TblOrders")
                        .HasForeignKey("PaymentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_TblOrders_LkpPaymentTypes");

                    b.HasOne("Cartify.Domain.Models.LkpShipementMethod", "ShipmentMethod")
                        .WithMany("TblOrders")
                        .HasForeignKey("ShipmentMethodId")
                        .IsRequired()
                        .HasConstraintName("FK_TblOrders_LkpShipementMethods");

                    b.Navigation("OrderStatues");

                    b.Navigation("PaymentType");

                    b.Navigation("ShipmentMethod");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrderDetail", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblOrder", "Order")
                        .WithMany("TblOrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_TblOrderProducts_TblOrders");

                    b.HasOne("Cartify.Domain.Models.TblProduct", "Product")
                        .WithMany("TblOrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_TblOrderProducts_TblProducts");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProduct", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblType", "Type")
                        .WithMany("TblProducts")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProducts_TblTypes");

                    b.HasOne("Cartify.Domain.Models.TblUserStore", "UserStore")
                        .WithMany("TblProducts")
                        .HasForeignKey("UserStoreId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProducts_TblUserStore1");

                    b.Navigation("Type");

                    b.Navigation("UserStore");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductDetail", b =>
                {
                    b.HasOne("Cartify.Domain.Models.LkpAttributesProduct", "AttributeProduct")
                        .WithMany("TblProductDetails")
                        .HasForeignKey("AttributeProductId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProductDetails_LkpAttributesProducts");

                    b.HasOne("Cartify.Domain.Models.LkpUnitMeasuresAttribute", "UnitMeasureAttribute")
                        .WithMany("TblProductDetails")
                        .HasForeignKey("UnitMeasureAttributeId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProductDetails_LkpUnitMeasuresAttributes");

                    b.Navigation("AttributeProduct");

                    b.Navigation("UnitMeasureAttribute");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductImage", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblProduct", "Product")
                        .WithMany("TblProductImages")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProductImages_TblProducts");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductsDetail", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblProduct", "ProductDetail")
                        .WithOne("TblProductsDetail")
                        .HasForeignKey("Cartify.Domain.Models.TblProductsDetail", "ProductDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProductsDetails_TblProducts");

                    b.HasOne("Cartify.Domain.Models.LkpUnitMeasuresAttribute", "UnitMeasureAttribute")
                        .WithMany("TblProductsDetails")
                        .HasForeignKey("UnitMeasureAttributeId")
                        .IsRequired()
                        .HasConstraintName("FK_TblProductsDetails_LkpUnitMeasuresAttributes");

                    b.Navigation("ProductDetail");

                    b.Navigation("UnitMeasureAttribute");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblRefund", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblOrderDetail", "OrderDetail")
                        .WithMany()
                        .HasForeignKey("OrderDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_TblRefunds_TblOrderDetails");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblReview", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblOrderDetail", "OrderDetails")
                        .WithMany("TblReviews")
                        .HasForeignKey("OrderDetailsId")
                        .IsRequired()
                        .HasConstraintName("FK_TblReviews_TblOrderDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblType", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblCategory", "Category")
                        .WithMany("TblTypes")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_TblTypes_TblCategories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUser", b =>
                {
                    b.OwnsMany("Cartify.Domain.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("TblUserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpiresOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("RevokedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TblUserId", "Id");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("TblUserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUserStore", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblInventory", "Inventory")
                        .WithMany("TblUserStores")
                        .HasForeignKey("InventoryId")
                        .IsRequired()
                        .HasConstraintName("FK_TblUserStore_TblInventory");

                    b.HasOne("Cartify.Domain.Models.TblUser", "User")
                        .WithMany("TblUserStores")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_TblUserStore_TblUsers");

                    b.Navigation("Inventory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartify.Domain.Models.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cartify.Domain.Models.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpAttribute", b =>
                {
                    b.Navigation("LkpAttributesProducts");

                    b.Navigation("LkpUnitMeasuresAttributes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpAttributesProduct", b =>
                {
                    b.Navigation("TblProductDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpOrderStatue", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpPaymentType", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpShipementMethod", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpUnitMeasuresAttribute", b =>
                {
                    b.Navigation("TblProductDetails");

                    b.Navigation("TblProductsDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.LkpUnitOfMeasure", b =>
                {
                    b.Navigation("LkpUnitMeasuresAttributes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblCategory", b =>
                {
                    b.Navigation("TblTypes");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblInventory", b =>
                {
                    b.Navigation("TblUserStores");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrder", b =>
                {
                    b.Navigation("TblOrderDetails");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblOrderDetail", b =>
                {
                    b.Navigation("TblReviews");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProduct", b =>
                {
                    b.Navigation("LkpAttributesProducts");

                    b.Navigation("TblOrderDetails");

                    b.Navigation("TblProductImages");

                    b.Navigation("TblProductsDetail");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductDetail", b =>
                {
                    b.Navigation("TblInventories");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblProductsDetail", b =>
                {
                    b.Navigation("TblInventories");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblType", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUser", b =>
                {
                    b.Navigation("TblAddresses");

                    b.Navigation("TblUserStores");
                });

            modelBuilder.Entity("Cartify.Domain.Models.TblUserStore", b =>
                {
                    b.Navigation("TblProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
